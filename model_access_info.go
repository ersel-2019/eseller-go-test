/*
 * Onboarding | GW system 2.0
 *
 * * All endpoint paths start with a version like `/v1`   * All versions must be maintained and functional forever or until decision is made to decommission a version * _`POST`_ and _`PUT`_ request **payloads are JSON** * Where possible HTTP request **status codes are used to describe the successfulness** of the requests, and content describes the details of the status <h1>Flow states</h1> <a href=\"https://viewer.diagrams.net/?highlight=0000ff&edit=_blank&layers=1&nav=1#G1cb9foqv8zgGVY0KWIQRTiE0-21ST3WUI\">Link to Diagram</a> 
 *
 * API version: 0.0.1
 * Contact: someone@ikea.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AccessInfo struct for AccessInfo
type AccessInfo struct {
	AccessToken *string `json:"accessToken,omitempty"`
}

// NewAccessInfo instantiates a new AccessInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessInfo() *AccessInfo {
	this := AccessInfo{}
	return &this
}

// NewAccessInfoWithDefaults instantiates a new AccessInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessInfoWithDefaults() *AccessInfo {
	this := AccessInfo{}
	return &this
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *AccessInfo) GetAccessToken() string {
	if o == nil || o.AccessToken == nil {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessInfo) GetAccessTokenOk() (*string, bool) {
	if o == nil || o.AccessToken == nil {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *AccessInfo) HasAccessToken() bool {
	if o != nil && o.AccessToken != nil {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *AccessInfo) SetAccessToken(v string) {
	o.AccessToken = &v
}

func (o AccessInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessToken != nil {
		toSerialize["accessToken"] = o.AccessToken
	}
	return json.Marshal(toSerialize)
}

type NullableAccessInfo struct {
	value *AccessInfo
	isSet bool
}

func (v NullableAccessInfo) Get() *AccessInfo {
	return v.value
}

func (v *NullableAccessInfo) Set(val *AccessInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessInfo(val *AccessInfo) *NullableAccessInfo {
	return &NullableAccessInfo{value: val, isSet: true}
}

func (v NullableAccessInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


